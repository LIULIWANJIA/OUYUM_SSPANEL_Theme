var $$ = document,
	$$getValue = a => $$.getElementById(a).value;

function initPickerMap() {
	pickerMap = new google.maps.Map(document.getElementById("ui_picker_map_wrap"), {
		center: {
			lat: 0,
			lng: 0
		},
		disableDefaultUI: !0,
		mapTypeId: google.maps.MapTypeId.ROADMAP,
		zoom: 15
	}), pickerMarker = new google.maps.Marker({
		map: pickerMap,
		position: {
			lat: 0,
			lng: 0
		}
	})
}
var pickerMap, pickerMarker, $pickerLib = $(".ui-picker-lib");
"undefined" != typeof google && initPickerMap(), "undefined" != typeof jQuery.ui && ($(".ui-picker-draggable-handler").draggable({
	addClasses: !1,
	appendTo: "body",
	cursor: "move",
	cursorAt: {
		top: 0,
		left: 0
	},
	delay: 100,
	helper: function() {
		return $(
			"<div class=\"tile tile-brand-accent ui-draggable-helper\"><div class=\"tile-side pull-left\"><div class=\"avatar avatar-sm\"><strong>" +
			$(".ui-picker-selected:first .ui-picker-draggable-avatar strong").html() +
			"</strong></div></div><div class=\"tile-inner text-overflow\">" + $(
				".ui-picker-selected:first .ui-picker-info-title").html() + "</div></div>")
	},
	start: function() {
		var a = $(".ui-picker-selected").length;
		1 < a && $(".ui-draggable-helper").append(
			"<div class=\"avatar avatar-brand avatar-sm ui-picker-draggable-count\">" + a + "</div>")
	},
	zIndex: 100
}), $(".ui-picker-nav .nav a").droppable({
	accept: ".ui-picker-draggable-handler",
	addClasses: !1,
	drop: function() {
		$("body").snackbar({
			content: "Dropped on \"" + $(this).html() + "\""
		})
	},
	hoverClass: "ui-droppable-helper",
	tolerance: "pointer"
}), $pickerLib.selectable({
	cancel: ".ui-picker-draggable-handler",
	filter: ".ui-picker-selectable-handler",
	selecting: function(e, a) {
		var b = $(a.selecting).parent();
		b.addClass("tile-brand-accent ui-picker-selected"), $(".ui-picker-info").addClass("ui-picker-info-active").removeClass(
			"ui-picker-info-null"), $(".ui-picker-info-desc-wrap").html(b.find(".ui-picker-info-desc").html()), $(
			".ui-picker-info-title-wrap").html(b.find(".ui-picker-info-title").html());
		var c = new google.maps.LatLng(b.find(".ui-picker-map-lat").html(), b.find(".ui-picker-map-lng").html());
		pickerMap.setCenter(c), pickerMarker.setMap(pickerMap), pickerMarker.setPosition(c)
	},
	unselecting: function(f, a) {
		var b = $(a.unselecting).parent();
		if (b.removeClass("tile-brand-accent ui-picker-selected"), $(".ui-picker-selected").length) {
			var c = $($(".ui-picker-selected")[0]);
			$(".ui-picker-info-desc-wrap").html(c.find(".ui-picker-info-desc").html()), $(".ui-picker-info-title-wrap").html(
				c.find(".ui-picker-info-title").html());
			var d = new google.maps.LatLng(c.find(".ui-picker-map-lat").html(), c.find(".ui-picker-map-lng").html());
			pickerMap.setCenter(d), pickerMarker.setMap(pickerMap), pickerMarker.setPosition(d)
		} else $(".ui-picker-info").addClass("ui-picker-info-null"), $(".ui-picker-info-desc-wrap").html(""), $(
			".ui-picker-info-title-wrap").html(""), pickerMarker.setMap(null)
	}
})), $(document).on("click", ".ui-picker-info-close", function() {
	$(".ui-picker-info").removeClass("ui-picker-info-active")
}), $("#ui_datepicker_example_1").pickdate(), $("#ui_datepicker_example_2").pickdate({
	cancel: "Clear",
	closeOnCancel: !1,
	closeOnSelect: !0,
	container: "",
	firstDay: 1,
	format: "You selecte!d: dddd, d mm, yy",
	formatSubmit: "dd/mmmm/yyyy",
	ok: "Close",
	onClose: function() {
		$("body").snackbar({
			content: "Datepicker closes"
		})
	},
	onOpen: function() {
		$("body").snackbar({
			content: "Datepicker opens"
		})
	},
	selectMonths: !0,
	selectYears: 10,
	today: ""
}), $("#ui_datepicker_example_3").pickdate({
	disable: [
		[2016, 0, 12],
		[2016, 0, 13],
		[2016, 0, 14]
	],
	today: ""
}), $("#ui_datepicker_example_4").pickdate({
	disable: [new Date(2016, 0, 12), new Date(2016, 0, 13), new Date(2016, 0, 14)],
	today: ""
}), $("#ui_datepicker_example_5").pickdate({
	disable: [2, 4, 6],
	today: ""
}), $("#ui_datepicker_example_6").pickdate({
	disable: [{
		from: [2016, 0, 12],
		to: 2
	}],
	today: ""
}), $("#ui_datepicker_example_7").pickdate({
	disable: [!0, 3, [2016, 0, 13], new Date(2016, 0, 14)],
	today: ""
}), $("#ui_datepicker_example_8").pickdate({
	disable: [{
			from: [2016, 0, 10],
			to: [2016, 0, 30]
		},
		[2016, 0, 13, "inverted"], {
			from: [2016, 0, 19],
			to: [2016, 0, 21],
			inverted: !0
		}
	],
	today: ""
}), $("#ui_datepicker_example_9").pickdate({
	max: [2016, 0, 30],
	min: [2016, 0, 10],
	today: ""
}), $("#ui_datepicker_example_10").pickdate({
	max: new Date(2016, 0, 30),
	min: new Date(2016, 0, 10),
	today: ""
}), $("#ui_datepicker_example_11").pickdate({
	max: !0,
	min: -10,
	today: ""
}), $(".finish-loading").on("click", function(b) {
	b.stopPropagation(), $($(this).attr("data-target")).addClass("el-loading-done")
}), $("#ui_el_loading_example_wrap .tile-active-show").each(function() {
	var a, d = $(this);
	d.on("hide.bs.tile", function() {
		clearTimeout(a)
	}), d.on("show.bs.tile", function() {
		$(".el-loading", d).hasClass("el-loading-done") || (a = setTimeout(function() {
			$(".el-loading", d).addClass("el-loading-done"), d.prepend(
				"<div class=\"tile-sub\"><p>Additional information<br><small>Aliquam in pharetra leo. In congue, massa sed elementum dictum, justo quam efficitur risus, in posuere mi orci ultrices diam.</small></p></div>"
			)
		}, 6e3))
	})
});
var snackbarText = 1;
$("#ui_snackbar_toggle_1").on("click", function() {
	$("body").snackbar({
		content: "Simple snackbar " + snackbarText + " with some text",
		show: function() {
			snackbarText++
		}
	})
}), $("#ui_snackbar_toggle_2").on("click", function() {
	$("body").snackbar({
		content: "<a data-dismiss=\"snackbar\">Dismiss</a><div class=\"snackbar-text\">Simple snackbar " + snackbarText +
			" with some text and a simple <a href=\"javascript:void(0)\">link</a>.</div>",
		show: function() {
			snackbarText++
		}
	})
}), $(function() {
	for (var a, b = $("button[data-toggle=dropdown]"), c = 0; c < b.length; c++) a = $("code[data-default=" + b[c].id +
		"]").text(), b[c].append(a);
	$("button[data-toggle=dropdown]").click(function() {
		$(this).parent().addClass("control-highlight-custom")
	}), $("button[data-toggle=dropdown]").blur(function() {
		"" == $(this)[0].innerText && $(this).parent().removeClass("control-highlight-custom")
	}), $(".dropdown-option").click(function() {
		var a = $(this).attr("data");
		$("#" + a).text($(this).text()), $("#" + a).val($(this).attr("val"))
	})
});

function custModal(a, b) {
	function c() {
		i = document.createElement("div"), i.classList.add("cust-mask")
	}

	function d() {
		i.classList.remove("fade-delay"), document.body.appendChild(i), requestAnimationFrame(() => {
			i.classList.add("cust-maskfade")
		})
	}

	function e() {
		b.style.display = "unset", requestAnimationFrame(() => {
			b.classList.add("cust-modelin", "fade-delay")
		})
	}

	function f() {
		i.addEventListener("click", () => {
			g(), h()
		})
	}

	function g() {
		b.classList.remove("fade-delay"), b.classList.remove("cust-modelin"), setTimeout(() => {
			b.style.display = "none"
		}, 300)
	}

	function h() {
		i.classList.add("fade-delay"), requestAnimationFrame(() => {
			i.classList.remove("cust-maskfade")
		}), setTimeout(() => {
			document.body.removeChild(i)
		}, 600)
	}
	let i;
	c(),
		function() {
			a.addEventListener("click", () => {
				d(), e()
			})
		}(), f()
}

function custDropdown(a, b) {
	(function() {
		a.addEventListener("click", () => {
			b.classList.contains("dropdown-active") ? (requestAnimationFrame(() => {
				b.classList.remove("dropdown-active")
			}), b.style.height = "0px") : (requestAnimationFrame(() => {
				b.classList.add("dropdown-active")
			}), b.style.height = b.scrollHeight + 2 * parseInt(window.getComputedStyle(b).paddingLeft) + "px")
		})
	})()
}

function rotatrArrow(a, b) {
	a.addEventListener("click", () => {
		b.classList.contains("arrow-rotate") ? b.classList.remove("arrow-rotate") : b.classList.add("arrow-rotate")
	})
}
class UIswitch {
	constructor(a, b, c, d, e) {
		this.nodeToHide = b, this.nodeToShow = c, this.display = d, this.buttonID = a, this.tempName = e
	}
	listenSwitch() {
		$$.getElementById(this.buttonID).addEventListener("click", () => {
			this.nodeToHide.forEach(a => {
				a.classList.add("node-fade")
			}), setTimeout(() => {
				this.nodeToShow.forEach(a => {
					a.style.display = this.display
				}), this.nodeToHide.forEach(a => {
					a.style.display = "none"
				})
			}, 250), setTimeout(() => {
				this.nodeToShow.forEach(a => {
					a.classList.remove("node-fade")
				})
			}, 270), this.saveTemp()
		})
	}
	saveTemp() {
		let a = {
			defaultType: this.buttonID
		};
		a = JSON.stringify(a), localStorage.setItem(this.tempName, a)
	}
	setDefault() {
		let a = localStorage.getItem(this.tempName);
		a = JSON.parse(a), "none" === window.getComputedStyle(this.nodeToShow[0]).display && "none" === window.getComputedStyle(
			this.nodeToHide[0]).display && this.nodeToShow.forEach(a => {
			a.style.display = this.display
		}), a && a.defaultType === this.buttonID && (this.nodeToShow.forEach(a => {
			a.style.display = this.display
		}), this.nodeToShow.forEach(a => {
			a.classList.remove("node-fade")
		}), this.nodeToHide.forEach(a => {
			a.style.display = "none"
		}), this.nodeToHide.forEach(a => {
			a.classList.add("node-fade")
		}))
	}
}
